{"ast":null,"code":"import _classCallCheck from\"/Users/usuario/Desktop/Ironhack/week7/2ShowHome/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from'axios';var Services=function Services(){var _this=this;_classCallCheck(this,Services);this.signup=function(username,password,lastName,role){return _this._service.post('/signup',{username:username,password:password,lastName:lastName,role:role});};this.login=function(username,password){return _this._service.post('/login',{username:username,password:password});};this.logout=function(){return _this._service.post('/logout');};this.loggedin=function(){return _this._service.get('/loggedin');};this._service=axios.create({baseURL:'http://localhost:5000/api/auth',withCredentials:true// RUTAS PERSISTENTES\n});};export{Services as default};","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/2ShowHome/client/src/service/Auth.service.js"],"names":["axios","Services","signup","username","password","lastName","role","_service","post","login","logout","loggedin","get","create","baseURL","withCredentials"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEqBC,CAAAA,Q,CAEjB,mBAAc,oDAOdC,MAPc,CAOL,SAACC,QAAD,CAAWC,QAAX,CAAqBC,QAArB,CAA+BC,IAA/B,QAAwC,CAAA,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmB,SAAnB,CAA8B,CAACL,QAAQ,CAARA,QAAD,CAAUC,QAAQ,CAARA,QAAV,CAAmBC,QAAQ,CAARA,QAAnB,CAA4BC,IAAI,CAAJA,IAA5B,CAA9B,CAAxC,EAPK,MAQdG,KARc,CAQN,SAACN,QAAD,CAAWC,QAAX,QAAwB,CAAA,KAAI,CAACG,QAAL,CAAcC,IAAd,CAAmB,QAAnB,CAA6B,CAAEL,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAA7B,CAAxB,EARM,MASdM,MATc,CASL,iBAAM,CAAA,KAAI,CAACH,QAAL,CAAcC,IAAd,CAAmB,SAAnB,CAAN,EATK,MAUdG,QAVc,CAUH,iBAAM,CAAA,KAAI,CAACJ,QAAL,CAAcK,GAAd,CAAkB,WAAlB,CAAN,EAVG,CACV,KAAKL,QAAL,CAAgBP,KAAK,CAACa,MAAN,CAAa,CACzBC,OAAO,CAAE,gCADgB,CAEzBC,eAAe,CAAE,IAAO;AAFC,CAAb,CAAhB,CAIH,C,QAPgBd,Q","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: 'http://localhost:5000/api/auth',\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    signup = (username, password, lastName, role) => this._service.post('/signup', {username,password,lastName,role})\n    login = (username, password) => this._service.post('/login', { username, password })\n    logout = () => this._service.post('/logout')\n    loggedin = () => this._service.get('/loggedin')\n}"]},"metadata":{},"sourceType":"module"}