{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/Ironhack/week7/2ShowHome/client/src/components/zone/Creator.js\";\nimport React from \"react\";\nimport EventService from \"../../service/Events.service\";\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\nimport EventCard from \"../events/Events-card\";\nimport EventSelect from \"../events/Events-card-mySelect\";\nimport EventForm from \"../events/Events-form\";\n\nclass CreatorProfile extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateEventsList();\n\n    this.updateEventsList = () => {\n      this._EventService.getAllEvents().then(allEventsFromDB => {\n        let eventlist = allEventsFromDB.data.filter(event => this.state.loggedInUser === event.creator);\n        this.setState({\n          events: eventlist\n        });\n      }).catch(err => console.log(\"Error\", err));\n\n      let idAll = this.props.loggedInUser && this.props.loggedInUser._id;\n      console.log(idAll);\n\n      this._EventService.selectTheEvent(idAll).then(allEventsFromDB => {\n        this.setState({\n          eventsSelect: allEventsFromDB.data\n        });\n      }).catch(err => console.log(\"Error\", err));\n    };\n\n    this.deleteEvent = id => {\n      this._EventService.deleteEvent(id).then(this.updateEventsList);\n    };\n\n    this.deleteSelect = id => {\n      const copyEvent = [this.state.eventsSelect];\n      copyEvent.splice(id, 1);\n      this.setState({\n        eventsSelect: copyEvent\n      }); // const copyContatc = [...this.state.ironContacts];\n      // copyContatc.splice(id, 1);\n      // this.setState({ ironContacts: copyContatc });\n    };\n\n    this.handleShow = () => this.setState({\n      showModalWindow: true\n    });\n\n    this.handleClose = () => this.setState({\n      showModalWindow: false\n    });\n\n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser._id,\n      events: [],\n      eventsSelect: [],\n      showModalWindow: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Mis Eventos \"), React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", \"A\\xF1adir evento\", \" \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(EventCard, Object.assign({\n      key: event._id\n    }, event, {\n      updateEventsList: this.updateEventsList,\n      deleteEvent: this.deleteEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" Mis planes seleccionados \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.eventsSelect.map(event => React.createElement(EventSelect, Object.assign({\n      key: event._id\n    }, event, {\n      updateEventsList: this.updateEventsList,\n      deleteSelect: this.deleteSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))))), React.createElement(Modal, {\n      show: this.state.showModalWindow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" A\\xF1adir nuevo evento \"), \" \"), \" \", React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(EventForm, {\n      closeModalWindow: this.handleClose,\n      updateEventsList: this.updateEventsList,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \" \"), \" \"));\n  }\n\n}\n\nexport default CreatorProfile;","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/2ShowHome/client/src/components/zone/Creator.js"],"names":["React","EventService","Container","Row","Button","Modal","EventCard","EventSelect","EventForm","CreatorProfile","Component","constructor","props","componentDidMount","updateEventsList","_EventService","getAllEvents","then","allEventsFromDB","eventlist","data","filter","event","state","loggedInUser","creator","setState","events","catch","err","console","log","idAll","_id","selectTheEvent","eventsSelect","deleteEvent","id","deleteSelect","copyEvent","splice","handleShow","showModalWindow","handleClose","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EventService from \"../../service/Events.service\";\n\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\n\nimport EventCard from \"../events/Events-card\";\n\nimport EventSelect from \"../events/Events-card-mySelect\";\nimport EventForm from \"../events/Events-form\";\n\n\nclass CreatorProfile extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n   \n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser._id,\n      events: [],\n      eventsSelect: [], \n      \n      showModalWindow: false\n      \n    };\n    \n    \n  }\n\n  componentDidMount = () => this.updateEventsList();\n  \n  updateEventsList = () => {\n    \n    this._EventService\n      .getAllEvents()\n    \n      .then(allEventsFromDB => {\n        let eventlist = allEventsFromDB.data.filter(\n          event => this.state.loggedInUser === event.creator\n          );\n          this.setState({\n          events: eventlist\n        });\n      })\n      \n      .catch(err => console.log(\"Error\", err));\n\n    let idAll = this.props.loggedInUser && this.props.loggedInUser._id\n    console.log(idAll)\n    this._EventService\n      .selectTheEvent(idAll)\n      .then(allEventsFromDB => {\n        \n       \n        this.setState({\n          eventsSelect: allEventsFromDB.data\n        });\n\n      })\n\n      .catch(err => console.log(\"Error\", err));\n      };\n\n\n \n\n\n\n      deleteEvent = id => {\n        this._EventService\n          .deleteEvent(id)\n          .then(this.updateEventsList)\n      }\n\n      deleteSelect = id => {\n        const copyEvent = [this.state.eventsSelect];\n        copyEvent.splice(id,1)\n        this.setState({ eventsSelect: copyEvent });\n\n        // const copyContatc = [...this.state.ironContacts];\n        // copyContatc.splice(id, 1);\n        // this.setState({ ironContacts: copyContatc });\n  }\n    \n      handleShow = () =>\n        this.setState({\n          showModalWindow: true\n        });\n      handleClose = () =>\n        this.setState({\n          showModalWindow: false\n        });\n    \n      render() {\n        \n        return (\n          <section>\n            <Container>\n              <h1> Mis Eventos </h1>\n              \n              <Button variant=\"dark\" onClick={this.handleShow}>\n                {\" \"}\n                Añadir evento{\" \"}\n              </Button>\n              <Row>{this.state.events.map(event => (< EventCard key = {event._id} {...event} updateEventsList = {this.updateEventsList} deleteEvent={this.deleteEvent}/>))}\n              </Row>\n              <hr></hr>\n              < h2 > Mis planes seleccionados </h2>\n              <Row>\n                {this.state.eventsSelect.map(event => (< EventSelect key={event._id} {...event} updateEventsList={this.updateEventsList} deleteSelect={this.deleteSelect}/>))}\n             \n              </Row>\n              \n            </Container>\n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title> Añadir nuevo evento </Modal.Title>{\" \"}\n          </Modal.Header>{\" \"}\n          <Modal.Body>\n            <EventForm\n              closeModalWindow={this.handleClose}\n              updateEventsList={this.updateEventsList}\n              loggedInUser={this.state.loggedInUser}\n            />{\" \"}\n          </Modal.Body>{\" \"}\n        </Modal>\n    \n           \n          </section>\n        );\n      }\n    }\n    \n    export default CreatorProfile;\n\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}