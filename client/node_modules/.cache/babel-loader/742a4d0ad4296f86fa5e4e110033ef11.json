{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/pages/Events-list.js\";\nimport React from 'react';\nimport EventService from '../../service/Events.service';\nimport { Container, Row, Button, Modal } from 'react-bootstrap';\nimport EventCard from './Events-card';\nimport EventForm from './Events-form';\n\nclass EventList extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateEventsList();\n\n    this.updateEventsList = () => {\n      console.log(\"este es el user del event-lidt\");\n\n      this._EventService.getAllEvents().then(allEventsFromDB => this.setState({\n        events: allEventsFromDB.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.handleShow = () => this.setState({\n      showModalWindow: true\n    });\n\n    this.handleClose = () => this.setState({\n      showModalWindow: false\n    });\n\n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser,\n      events: [],\n      showModalWindow: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Este son los planes , mira y unete alguno... \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(EventCard, Object.assign({\n      key: event._id\n    }, event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))), React.createElement(Modal, {\n      show: this.state.showModalWindow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"A\\xF1adir nuevo evento\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(EventForm, {\n      closeModalWindow: this.handleClose,\n      updateEventsList: this.updateEventsList,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/pages/Events-list.js"],"names":["React","EventService","Container","Row","Button","Modal","EventCard","EventForm","EventList","Component","constructor","props","componentDidMount","updateEventsList","console","log","_EventService","getAllEvents","then","allEventsFromDB","setState","events","data","catch","err","handleShow","showModalWindow","handleClose","state","loggedInUser","render","map","event","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,iBAA9C;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACxC;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM,KAAKC,gBAAL,EATP;;AAAA,SAWnBA,gBAXmB,GAWA,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AACA,WAAKC,aAAL,CAAmBC,YAAnB,GACKC,IADL,CACUC,eAAe,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,eAAe,CAACG;AAA1B,OAAd,CAD7B,EAEKC,KAFL,CAEWC,GAAG,IAAIV,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,GAArB,CAFlB;AAGC,KAhBc;;AAAA,SAkBnBC,UAlBmB,GAkBN,MAAM,KAAKL,QAAL,CAAc;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAAd,CAlBA;;AAAA,SAmBnBC,WAnBmB,GAmBL,MAAM,KAAKP,QAAL,CAAc;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAAd,CAnBD;;AAEf,SAAKV,aAAL,GAAqB,IAAIf,YAAJ,EAArB;AACA,SAAK2B,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAElB,KAAK,CAACkB,YADX;AAETR,MAAAA,MAAM,EAAE,EAFC;AAGTK,MAAAA,eAAe,EAAE;AAHR,KAAb;AAKH;;AAaDI,EAAAA,MAAM,GAAG;AACL,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFJ,EAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWP,MAAX,CAAkBU,GAAlB,CAAsBC,KAAK,IAAI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAtB,OAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/B,CADL,CANJ,CAFJ,EAcI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWF,eAAxB;AAAyC,MAAA,MAAM,EAAE,KAAKC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAE,KAAKA,WAAlC;AAA+C,MAAA,gBAAgB,EAAE,KAAKd,gBAAtE;AAAwF,MAAA,YAAY,EAAE,KAAKe,KAAL,CAAWC,YAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAdJ,CAHJ;AA6BH;;AArDmC;;AAyDxC,eAAerB,SAAf","sourcesContent":["import React from 'react'\nimport EventService from '../../service/Events.service'\n\nimport { Container, Row, Button, Modal } from 'react-bootstrap'\n\nimport EventCard from './Events-card'\nimport EventForm from './Events-form'\n\nclass EventList extends React.Component {\n// el hijo no puede traer nada del padre sin el props\n    constructor(props) {\n        super(props)\n        this._EventService = new EventService()\n        this.state = {\n            loggedInUser: props.loggedInUser,\n            events: [],\n            showModalWindow: false\n        }\n    }\n    componentDidMount = () => this.updateEventsList()\n\n    updateEventsList = () => {\n        console.log(\"este es el user del event-lidt\")\n        this._EventService.getAllEvents()\n            .then(allEventsFromDB => this.setState({ events: allEventsFromDB.data }),)\n            .catch(err => console.log(\"Error\", err))\n        }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => this.setState({ showModalWindow: false })\n\n    render() {\n        return (\n\n\n            <section>\n\n                <Container>\n\n                    <h1>Este son los planes , mira y unete alguno... </h1>\n\n                    {/* <Button variant=\"dark\" onClick={this.handleShow}>Añadir evento</Button> */}\n\n                    <Row>\n                        {this.state.events.map(event => <EventCard key={event._id} {...event} />)}\n                    </Row>\n                </Container>\n\n\n                <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Añadir nuevo evento</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <EventForm closeModalWindow={this.handleClose} updateEventsList={this.updateEventsList} loggedInUser={this.state.loggedInUser}/>\n                    </Modal.Body>\n                </Modal>\n\n            </section>\n\n        )\n    }\n}\n\n\nexport default EventList"]},"metadata":{},"sourceType":"module"}