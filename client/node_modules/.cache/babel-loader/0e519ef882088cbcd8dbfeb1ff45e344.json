{"ast":null,"code":"import axios from 'axios';\nexport default class Services {\n  constructor() {\n    this.getAllSpaces = () => this._service.get('/space/getAllSpaces');\n\n    this.getOneSpace = id => this._service.get(`/${id}`);\n\n    this.postSpace = space => this._service.post('/newSpace', space);\n\n    this.SpaceEdit = (space, spaceID) => {\n      return this._service.post('/edit', {\n        space,\n        spaceID\n      });\n    };\n\n    this.deleteSpace = spaceID => {\n      return this._service.get(`/delete/${spaceID}`);\n    };\n\n    this._service = axios.create({\n      baseURL: `${process.env.REACT_APP_URL}/space`,\n      withCredentials: true // RUTAS PERSISTENTES\n\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/2ShowHome/client/src/service/Spaces.service.js"],"names":["axios","Services","constructor","getAllSpaces","_service","get","getOneSpace","id","postSpace","space","post","SpaceEdit","spaceID","deleteSpace","create","baseURL","process","env","REACT_APP_URL","withCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAE1BC,EAAAA,WAAW,GAAG;AAAA,SAOdC,YAPc,GAOC,MAAM,KAAKC,QAAL,CAAcC,GAAd,CAAkB,qBAAlB,CAPP;;AAAA,SAQdC,WARc,GAQAC,EAAE,IAAI,KAAKH,QAAL,CAAcC,GAAd,CAAmB,IAAGE,EAAG,EAAzB,CARN;;AAAA,SASdC,SATc,GASFC,KAAK,IAAI,KAAKL,QAAL,CAAcM,IAAd,CAAmB,WAAnB,EAAgCD,KAAhC,CATP;;AAAA,SAUdE,SAVc,GAUF,CAACF,KAAD,EAAQG,OAAR,KAAoB;AAAC,aAAO,KAAKR,QAAL,CAAcM,IAAd,CAAmB,OAAnB,EAA4B;AAAED,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAA5B,CAAP;AAAsD,KAVzE;;AAAA,SAWdC,WAXc,GAWCD,OAAD,IAAa;AAAC,aAAO,KAAKR,QAAL,CAAcC,GAAd,CAAmB,WAAUO,OAAQ,EAArC,CAAP;AAA+C,KAX7D;;AACV,SAAKR,QAAL,GAAgBJ,KAAK,CAACc,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,QADb;AAEzBC,MAAAA,eAAe,EAAE,IAFQ,CAEH;;AAFG,KAAb,CAAhB;AAIH;;AAPyB","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/space`,\n            withCredentials: true // RUTAS PERSISTENTES\n        })\n    }\n\n    getAllSpaces = () => this._service.get('/space/getAllSpaces')\n    getOneSpace = id => this._service.get(`/${id}`)\n    postSpace = space => this._service.post('/newSpace', space)\n    SpaceEdit = (space, spaceID) => {return this._service.post('/edit', { space, spaceID})}\n    deleteSpace = (spaceID) => {return this._service.get(`/delete/${spaceID}`)}\n}"]},"metadata":{},"sourceType":"module"}