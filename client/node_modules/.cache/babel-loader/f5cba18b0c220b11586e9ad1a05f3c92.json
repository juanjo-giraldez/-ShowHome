{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/events/Events-list.js\";\nimport React from 'react';\nimport EventService from '../../service/Events.service';\nimport { Container, Row, Button, Modal } from 'react-bootstrap';\nimport EventCard from './Events-card';\nimport EventForm from './Events-form';\n\nclass EventList extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateEventsList();\n\n    this.updateEventsList = () => {\n      console.log(\"este es el user del event-lidt\", this.state.loggedInUser._id);\n\n      this._EventService.getAllEvents().then(allEventsFromDB => this.setState({\n        events: allEventsFromDB.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.handleShow = () => this.setState({\n      showModalWindow: true\n    });\n\n    this.handleClose = () => this.setState({\n      showModalWindow: false\n    });\n\n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser,\n      events: [],\n      showModalWindow: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Este son los planes, mira y unete alguno... \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", this.state.events.map(event => React.createElement(EventCard, Object.assign({\n      key: event._id\n    }, event, {\n      updateEventsList: \"ESTO ES LO QUE TEORICAMENTE SERIA EVENT LIST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), \" \"), \" \"), React.createElement(Modal, {\n      show: this.state.showModalWindow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" A\\xF1adir nuevo evento \"), \" \"), \" \", React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(EventForm, {\n      closeModalWindow: this.handleClose,\n      updateEventsList: this.updateEventsList,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \" \"), \" \"));\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/events/Events-list.js"],"names":["React","EventService","Container","Row","Button","Modal","EventCard","EventForm","EventList","Component","constructor","props","componentDidMount","updateEventsList","console","log","state","loggedInUser","_id","_EventService","getAllEvents","then","allEventsFromDB","setState","events","data","catch","err","handleShow","showModalWindow","handleClose","render","map","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SACIC,SADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,KAJJ,QAKO,iBALP;AAOA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACpC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM,KAAKC,gBAAL,EATP;;AAAA,SAWnBA,gBAXmB,GAWA,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAtE;;AACA,WAAKC,aAAL,CAAmBC,YAAnB,GACKC,IADL,CACUC,eAAe,IAAI,KAAKC,QAAL,CAAc;AACnCC,QAAAA,MAAM,EAAEF,eAAe,CAACG;AADW,OAAd,CAD7B,EAIKC,KAJL,CAIWC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBY,GAArB,CAJlB;AAKH,KAlBkB;;AAAA,SAoBnBC,UApBmB,GAoBN,MAAM,KAAKL,QAAL,CAAc;AAC7BM,MAAAA,eAAe,EAAE;AADY,KAAd,CApBA;;AAAA,SAuBnBC,WAvBmB,GAuBL,MAAM,KAAKP,QAAL,CAAc;AAC9BM,MAAAA,eAAe,EAAE;AADa,KAAd,CAvBD;;AAEf,SAAKV,aAAL,GAAqB,IAAIlB,YAAJ,EAArB;AACA,SAAKe,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAEN,KAAK,CAACM,YADX;AAETO,MAAAA,MAAM,EAAE,EAFC;AAGTK,MAAAA,eAAe,EAAE;AAHR,KAAb;AAKH;;AAmBDE,EAAAA,MAAM,GAAG;AACL,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAHA,EASA,oBACA,GADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEI,KAAKf,KAAL,CAAWQ,MAAX,CAAkBQ,GAAlB,CAAsBC,KAAK,IAAI,oBAAE,SAAF;AAAY,MAAA,GAAG,EACtCA,KAAK,CAACf;AADiB,OAGpBe,KAHoB;AAK3B,MAAA,gBAAgB,EAAG,8CALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/B,CAFJ,MATA,MAHA,EAyBA,oBACA,KADA;AACM,MAAA,IAAI,EACN,KAAKjB,KAAL,CAAWa,eAFf;AAIA,MAAA,MAAM,EACF,KAAKC,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOA,oBACA,KADA,CACM,MADN;AACa,MAAA,WAAW,MADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBACA,KADA,CACM,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFA,MAPA,OAWe,oBACf,KADe,CACT,IADS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEf,oBACA,SADA;AACU,MAAA,gBAAgB,EACtB,KAAKA,WAFT;AAIA,MAAA,gBAAgB,EACZ,KAAKjB,gBALT;AAOA,MAAA,YAAY,EACR,KAAKG,KAAL,CAAWC,YARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFe,MAXf,MAzBA,CAHJ;AA2DH;;AAzFmC;;AA6FxC,eAAeT,SAAf","sourcesContent":["import React from 'react'\nimport EventService from '../../service/Events.service'\n\nimport {\n    Container,\n    Row,\n    Button,\n    Modal\n} from 'react-bootstrap'\n\nimport EventCard from './Events-card'\nimport EventForm from './Events-form'\n\nclass EventList extends React.Component {\n    // el hijo no puede traer nada del padre sin el props\n    constructor(props) {\n        super(props)\n        this._EventService = new EventService()\n        this.state = {\n            loggedInUser: props.loggedInUser,\n            events: [],\n            showModalWindow: false\n        }\n    }\n    componentDidMount = () => this.updateEventsList()\n\n    updateEventsList = () => {\n        console.log(\"este es el user del event-lidt\", this.state.loggedInUser._id)\n        this._EventService.getAllEvents()\n            .then(allEventsFromDB => this.setState({\n                events: allEventsFromDB.data\n            }), )\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    handleShow = () => this.setState({\n        showModalWindow: true\n    })\n    handleClose = () => this.setState({\n        showModalWindow: false\n    })\n\n    render() {\n        return (\n\n\n            <\n            section >\n\n            <\n            Container >\n\n            <\n            h1 > Este son los planes, mira y unete alguno... < /h1>\n\n            {\n                /* <Button variant=\"dark\" onClick={this.handleShow}>Añadir evento</Button> */ }\n\n            <\n            Row > {\n                this.state.events.map(event => < EventCard key = {\n                        event._id\n                    } {\n                        ...event\n                    }\n                    updateEventsList = 'ESTO ES LO QUE TEORICAMENTE SERIA EVENT LIST' / > )\n            } <\n            /Row> <\n            /Container>\n\n\n            <\n            Modal show = {\n                this.state.showModalWindow\n            }\n            onHide = {\n                this.handleClose\n            } >\n            <\n            Modal.Header closeButton >\n            <\n            Modal.Title > Añadir nuevo evento < /Modal.Title> <\n            /Modal.Header> <\n            Modal.Body >\n            <\n            EventForm closeModalWindow = {\n                this.handleClose\n            }\n            updateEventsList = {\n                this.updateEventsList\n            }\n            loggedInUser = {\n                this.state.loggedInUser\n            }\n            /> <\n            /Modal.Body> <\n            /Modal>\n\n            <\n            /section>\n\n        )\n    }\n}\n\n\nexport default EventList"]},"metadata":{},"sourceType":"module"}