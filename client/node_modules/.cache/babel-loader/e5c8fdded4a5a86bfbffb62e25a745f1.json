{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/events/Events-list.js\";\nimport React from \"react\";\nimport EventService from \"../../service/Events.service\";\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\nimport EventCard from \"./Events-card\";\nimport EventForm from \"./Events-form\";\n\nclass EventList extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateEventsList();\n\n    this.updateEventsList = () => {\n      this._EventService.getAllEvents().then(allEventsFromDB => this.setState({\n        events: allEventsFromDB.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.deleteEvent = id => {\n      this._EventService.deleteEvent(); //  delete = id => {\n      //    \n      //   \n      //    this.setState({\n      //      ironContacts: copyContatc\n      //    });\n      //  };\n\n    };\n\n    this.handleShow = () => this.setState({\n      showModalWindow: true\n    });\n\n    this.handleClose = () => this.setState({\n      showModalWindow: false\n    });\n\n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser,\n      events: [],\n      showModalWindow: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Este son los planes , mira y unete alguno... \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(EventCard, Object.assign({\n      key: event._id\n    }, event, {\n      updateEventsList: this.updateEventsList,\n      deleteEvent: this.deleteEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))), React.createElement(Modal, {\n      show: this.state.showModalWindow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"A\\xF1adir nuevo evento\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(EventForm, {\n      closeModalWindow: this.handleClose,\n      updateEventsList: this.updateEventsList,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/usuario/Desktop/Ironhack/week7/Show Home Final-Project/client/src/components/events/Events-list.js"],"names":["React","EventService","Container","Row","Button","Modal","EventCard","EventForm","EventList","Component","constructor","props","componentDidMount","updateEventsList","_EventService","getAllEvents","then","allEventsFromDB","setState","events","data","catch","err","console","log","deleteEvent","id","handleShow","showModalWindow","handleClose","state","loggedInUser","render","map","event","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EventService from \"../../service/Events.service\";\n\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\n\nimport EventCard from \"./Events-card\";\nimport EventForm from \"./Events-form\";\n\nclass EventList extends React.Component {\n  // el hijo no puede traer nada del padre sin el props\n  constructor(props) {\n    super(props);\n    this._EventService = new EventService();\n    this.state = {\n      loggedInUser: props.loggedInUser,\n      events: [],\n      showModalWindow: false\n    };\n  }\n  componentDidMount = () => this.updateEventsList();\n\n  updateEventsList = () => {\n    \n    this._EventService\n      .getAllEvents()\n      .then(allEventsFromDB => this.setState({ events: allEventsFromDB.data }))\n      .catch(err => console.log(\"Error\", err));\n  };\n\ndeleteEvent = id => {\n  this._EventService\n    .deleteEvent()\n    \n  \n  //  delete = id => {\n  //    \n  //   \n  //    this.setState({\n  //      ironContacts: copyContatc\n  //    });\n  //  };\n\n}\n \n\n\n\n  \n\n  handleShow = () => this.setState({ showModalWindow: true });\n  handleClose = () => this.setState({ showModalWindow: false });\n\n  render() {\n    return (\n      <section>\n        <Container>\n          <h1>Este son los planes , mira y unete alguno... </h1>\n\n          {/* <Button variant=\"dark\" onClick={this.handleShow}>Añadir evento</Button> */}\n\n          <Row>\n            {this.state.events.map(event => (\n              <EventCard\n                key={event._id}\n                {...event}\n                updateEventsList={this.updateEventsList}\n                deleteEvent = {\n                  this.deleteEvent\n                }\n              />\n            ))}\n          </Row>\n        </Container>\n\n        <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Añadir nuevo evento</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <EventForm\n              closeModalWindow={this.handleClose}\n              updateEventsList={this.updateEventsList}\n              loggedInUser={this.state.loggedInUser}\n            />\n          </Modal.Body>\n        </Modal>\n      </section>\n    );\n  }\n}\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}